# Memory-optimized Dockerfile for AWS deployment
FROM python:3.11-slim

WORKDIR /app

# Install only essential system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies with optimizations
RUN pip install --no-cache-dir --compile -r requirements.txt \
    && python -m compileall /usr/local/lib/python3.11/site-packages/ \
    && find /usr/local/lib/python3.11/site-packages/ -name "*.pyc" -delete

# Copy application code
COPY . .

# Remove unnecessary files to reduce image size
RUN find . -name "*.pyc" -delete \
    && find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true \
    && rm -rf .git* *.md tests/ docs/

# Set Python optimizations for lower memory usage
ENV PYTHONOPTIMIZE=2
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Use webhook version for AWS
EXPOSE 5000

# Health check removed - using polling, no webhook endpoint needed

# Run with limited workers for memory efficiency  
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "1", "--timeout", "120", "--max-requests", "100", "--max-requests-jitter", "10", "main_webhook:app"]