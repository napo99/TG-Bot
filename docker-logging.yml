version: '3.8'

# Docker Compose Logging Configuration for Crypto Assistant
# Provides structured logging with rotation and proper labeling

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "5"
    compress: "true"

x-logging-labels: &logging-labels
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "5"
    compress: "true"
    labels: "project=crypto-assistant,environment=${ENVIRONMENT:-development}"

services:
  telegram-bot:
    extends:
      file: docker-compose.yml
      service: telegram-bot
    logging:
      <<: *logging-labels
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
        labels: "service=telegram-bot,component=bot,project=crypto-assistant,environment=${ENVIRONMENT:-development}"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_DIR=/app/logs
      - LOG_CONSOLE=true
      - LOG_FILE=true
      - SERVICE_NAME=telegram-bot
    volumes:
      - ./data/logs/telegram-bot:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro

  market-data:
    extends:
      file: docker-compose.yml
      service: market-data
    logging:
      <<: *logging-labels
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
        labels: "service=market-data,component=api,project=crypto-assistant,environment=${ENVIRONMENT:-development}"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_DIR=/app/logs
      - LOG_CONSOLE=true
      - LOG_FILE=true
      - SERVICE_NAME=market-data
    volumes:
      - ./data/logs/market-data:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    logging:
      <<: *logging-labels
      options:
        max-size: "5m"
        max-file: "3"
        compress: "true"
        labels: "service=redis,component=cache,project=crypto-assistant,environment=${ENVIRONMENT:-development}"

  # Log aggregation service (optional - for centralized logging)
  log-aggregator:
    image: fluent/fluent-bit:latest
    container_name: crypto-log-aggregator
    volumes:
      - ./config/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./data/logs:/var/log/crypto-assistant:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "24224:24224"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
        labels: "service=log-aggregator,component=logging,project=crypto-assistant"
    restart: unless-stopped
    depends_on:
      - telegram-bot
      - market-data

volumes:
  telegram-bot-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs/telegram-bot
  
  market-data-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs/market-data

  system-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logs/system

networks:
  crypto-network:
    driver: bridge
    labels:
      - "project=crypto-assistant"
      - "environment=${ENVIRONMENT:-development}"