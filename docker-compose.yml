services:
  market-data:
    build:
      context: ./services/market-data
      dockerfile: Dockerfile
    container_name: crypto-market-data
    ports:
      - "8001:8001"
    environment:
      - SUPPORTED_EXCHANGES=binance,bybit,okx,kucoin
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY}
      - BINANCE_TESTNET=${BINANCE_TESTNET:-true}
      - BYBIT_API_KEY=${BYBIT_API_KEY}
      - BYBIT_SECRET_KEY=${BYBIT_SECRET_KEY}
      - BYBIT_TESTNET=${BYBIT_TESTNET:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - crypto-network

  telegram-bot:
    build:
      context: ./services/telegram-bot
      dockerfile: Dockerfile
    container_name: crypto-telegram-bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - MARKET_DATA_URL=http://market-data:8001
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - market-data
    restart: unless-stopped
    networks:
      - crypto-network

  # Database (for Phase 2)
  # postgres:
  #   image: postgres:15
  #   container_name: crypto-postgres
  #   environment:
  #     - POSTGRES_DB=crypto_assistant
  #     - POSTGRES_USER=crypto_user
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - crypto-network

  # Redis (for Phase 2)
  # redis:
  #   image: redis:7-alpine
  #   container_name: crypto-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - crypto-network

networks:
  crypto-network:
    driver: bridge

# volumes:
#   postgres_data:
#   redis_data: